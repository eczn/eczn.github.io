{"code":0,"data":{"type":"tsx","meta":{"id":"syuuchuuryoku-240508","title":"注意力训练 大数相加","author":"eczn","category":"注意力训练","time":"2024-05-08T14:20:00.000Z","type":"article","appTitle":"","appIcon":"","intro":"未定义 intro","cateIntro":"该分类暂无介绍 ~","imgs":[],"tags":[],"isDraft":false,"fileDeps":[],"wordCount":0},"tsxDistPath":"./syuuchuuryoku/240508/index.blog.js","ssrContent":"<div class=\"std-para --fontArticle\" data-minimap-color=\"#CCCCCC\">经典问题，定长二进制数计算会有溢出的问题，为了解决这个问题可以用 string 来表示数字，并在这样的字符串构造上实现加法过程，已实现，效果如下所示：（已经挂到 window.bigIntAdd 了）</div><div class=\"std-window mode-windowed\"><div class=\"std-window-menus\"><div class=\"std-window-title\"><span></span></div><div class=\"std-window-btns\"><div class=\"std-icon std-window-menu-btn\" style=\"overflow:hidden;border-radius:1em;box-sizing:border-box\"></div><div class=\"std-icon std-window-menu-btn\" style=\"overflow:hidden;border-radius:1em;box-sizing:border-box\"></div></div></div><div style=\"height:auto\" class=\"std-window-content\"><div style=\"line-height:2;padding:1em;font-family:var(--fontCode)\"><div>输入 a: <input style=\"padding:.2em .5em;width:10em;height:1.5em;font-family:var(--fontCode)\" value=\"\"/></div><div>输入 b: <input style=\"padding:.2em .5em;width:10em;height:1.5em;font-family:var(--fontCode)\" value=\"\"/></div><div>a + b = ## a 是无效输入 (请输入正整数) ##</div></div></div></div><div style=\"display:none;height:0px;background:#BBB\">placeholder</div><div class=\"std-para --fontArticle\" data-minimap-color=\"#CCCCCC\">注意到：</div><ul class=\"numbering-main\" data-minimap-color=\"#DDDDDD\"><li class=\"numbering-item\"><div class=\"numbering-marker numbering-marker-rect\"></div><div class=\"std-para --fontArticle\" data-minimap-color=\"#CCCCCC\">&#x27;0&#x27; + &#x27;1&#x27; === &#x27;1&#x27;</div></li><li class=\"numbering-item\"><div class=\"numbering-marker numbering-marker-rect\"></div><div class=\"std-para --fontArticle\" data-minimap-color=\"#CCCCCC\">&#x27;11&#x27; + &#x27;2&#x27; === &#x27;10&#x27; + (&#x27;1&#x27; + &#x27;2&#x27;) === &#x27;13&#x27;</div></li><li class=\"numbering-item\"><div class=\"numbering-marker numbering-marker-rect\"></div><div class=\"std-para --fontArticle\" data-minimap-color=\"#CCCCCC\">&#x27;29&#x27; + &#x27;3&#x27; === &#x27;20&#x27; + (&#x27;9&#x27; + &#x27;3&#x27;) === (&#x27;20&#x27; + 进位1) + &#x27;2&#x27; === 22</div></li></ul><div class=\"std-para --fontArticle\" data-minimap-color=\"#CCCCCC\">可以看到第三步的进位处理是一种从低位到高位不断进位的递推关系，因此有:</div><div class=\"std-code\"><pre class=\"prismjs tsx rally-runner  \" ><span class=\"line-numbers-rows\" style=\"user-select: none;\">00</span><span class=\"token keyword\">function</span> <span class=\"token function\">addDecimal</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> string<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">01</span>  <span class=\"token keyword\">return</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">02</span><span class=\"token punctuation\">}</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">03</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">04</span><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bigIntAdd</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> string<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> string <span class=\"token punctuation\">{</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">05</span>  <span class=\"token keyword\">const</span> lastA <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">06</span>  <span class=\"token keyword\">const</span> lastB <span class=\"token operator\">=</span> b<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">07</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">08</span>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> lastA <span class=\"token operator\">===</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> b\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">09</span>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> lastB <span class=\"token operator\">===</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> a\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">10</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">11</span>  <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token function\">addDecimal</span><span class=\"token punctuation\">(</span>lastA<span class=\"token punctuation\">,</span> lastB<span class=\"token punctuation\">)</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">12</span>  <span class=\"token keyword\">const</span> carry <span class=\"token operator\">=</span> res <span class=\"token operator\">>=</span> <span class=\"token number\">10</span> <span class=\"token operator\">?</span> <span class=\"token string\">'1'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'0'</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">13</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">14</span>  <span class=\"token comment\">// 将进位 carry 加到 half 上就好了</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">15</span>  <span class=\"token keyword\">const</span> half <span class=\"token operator\">=</span> <span class=\"token function\">bigIntAdd</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">16</span>  <span class=\"token keyword\">const</span> full <span class=\"token operator\">=</span> <span class=\"token function\">bigIntAdd</span><span class=\"token punctuation\">(</span>half<span class=\"token punctuation\">,</span> carry<span class=\"token punctuation\">)</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">17</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">18</span>  <span class=\"token comment\">// 0 开头就不输出 full 了</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">19</span>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>full <span class=\"token operator\">===</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>res <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">20</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">21</span>  <span class=\"token keyword\">return</span> full <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>res <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">22</span><span class=\"token punctuation\">}</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">23</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">24</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bigIntAdd'</span><span class=\"token punctuation\">)</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">25</span>  console<span class=\"token punctuation\">.</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bigIntAdd'</span><span class=\"token punctuation\">)</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">26</span>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">bigIntAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">27</span>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">bigIntAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">28</span>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">bigIntAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">29</span>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">bigIntAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">'9'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'11'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">30</span>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">bigIntAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">'88'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'12'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">31</span>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">bigIntAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">'99'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'999999'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">32</span>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">bigIntAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">'99999999999'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'99999'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">33</span>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">bigIntAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'9'</span><span class=\"token punctuation\">.</span><span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span><span class=\"token number\">999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">34</span>  console<span class=\"token punctuation\">.</span><span class=\"token function\">timeEnd</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bigIntAdd'</span><span class=\"token punctuation\">)</span>\n<span class=\"line-numbers-rows\" style=\"user-select: none;\">35</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">groupEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></div>","props":{"codeBigIntAdd":"function addDecimal(a: string, b: string) {\n  return Number(a) + Number(b)\n}\n\nexport function bigIntAdd(a: string, b: string): string {\n  const lastA = a[a.length - 1]\n  const lastB = b[b.length - 1]\n\n  if (typeof lastA === 'undefined') return b\n  if (typeof lastB === 'undefined') return a\n\n  const res = addDecimal(lastA, lastB)\n  const carry = res >= 10 ? '1' : '0'\n\n  // 将进位 carry 加到 half 上就好了\n  const half = bigIntAdd(a.slice(0, -1), b.slice(0, -1))\n  const full = bigIntAdd(half, carry)\n\n  // 0 开头就不输出 full 了\n  if (full === '0') return (res % 10).toString()\n\n  return full + (res % 10).toString()\n}\n\nconsole.group('bigIntAdd')\n  console.time('bigIntAdd')\n  console.log(bigIntAdd('0', '0'))\n  console.log(bigIntAdd('4', '0'))\n  console.log(bigIntAdd('1', '8'))\n  console.log(bigIntAdd('9', '11'))\n  console.log(bigIntAdd('88', '12'))\n  console.log(bigIntAdd('99', '999999'))\n  console.log(bigIntAdd('99999999999', '99999'))\n  console.log(bigIntAdd('2', '9'.repeat(999)))\n  console.timeEnd('bigIntAdd')\nconsole.groupEnd()\n"},"tocStack":[]}}